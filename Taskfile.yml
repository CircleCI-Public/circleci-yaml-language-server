version: "3"

tasks:
  build:
    desc: Build server binary.
    cmds:
      - task: build:server

  build:all:
    desc: Build all binaries
    cmds:
      - task: build:parser
      - task: build:server
      - task: build:test-tree-sitter

  build:do:
    internal: true
    cmds:
      - bash -c "go build {{.BUILD_FLAGS}} -o {{.BIN_PATH}}{{if eq OS "windows"}}'.exe'{{end}} {{.GO_FILE}}"
    vars:
      BUILD_FLAGS: '{{default "" .BUILD_FLAGS}}'

  build:parser:
    cmds:
      - task: build:do
        vars:
          BIN_PATH: bin/parser
          GO_FILE: cmd/parse_yaml/parse_yaml.go

  build:server:
    desc: Build server binary
    cmds:
      - task: build:do
        vars:
          BIN_PATH: bin/start_server
          GO_FILE: cmd/start_server/start_server.go

  build:server:debug:
    desc: Build server binary without optimizations
    cmds:
      - task: build:do
        vars:
          BIN_PATH: bin/start_server
          BUILD_FLAGS: -gcflags='all=-N -l'
          GO_FILE: cmd/start_server/start_server.go

  build:test-tree-sitter:
    cmds:
      - task: build:do
        vars:
          BIN_PATH: bin/test-tree-sitter
          GO_FILE: cmd/test_tree-sitter/test_tree-sitter.go

  run:
    cmds:
      - go run cmd/start_server/start_server.go

  start:
    cmds:
      - ./bin/start_server
    env:
      PORT: "{{.PORT | default 10001}}"
      SCHEMA_LOCATION: ./publicschema.json

  init:
    - go mod download

  licenses:
    - go-licenses csv ./cmd/start_server >licenses.csv 2>licenses.errors

  lint:
    cmds:
      - task: lint:go

  lint:go:
    cmds:
      - gofmt -w pkg

  prepare:vscode:
    dir: editors/vscode
    cmds:
      - yarn install --immutable
      - yarn run build

  test:
    cmds:
      - task: test:go

  test:all:
    cmds:
      - task: test:go

  test:go:
    cmds:
      - go test ./... -count=1

  validate:
    desc: Run all necessary task to build, lint and test the project
    deps:
      - prepare:vscode
    cmds:
      - task: lint
      - task: build:all
      - task: test
